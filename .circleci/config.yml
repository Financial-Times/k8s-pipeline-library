# Java Maven CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2.1

references:
  docker-auth: &docker-auth
    auth:
      username: $DOCKERHUB_USERNAME
      password: $DOCKERHUB_ACCESS_TOKEN

jobs:
  test_and_build:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk@sha256:f4a8da364ff6aa7b9a64dcc77c0ee7b41729920e4a0727a467799e713bb8ff8d
        <<: *docker-auth

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "pom.xml" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: mvn dependency:go-offline

      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "pom.xml" }}

      - run:
          name: "Maven build"
          command: |
            mvn clean test

      - run:
          name: "Compose jacoco report & coveralls"
          command: |
            mvn jacoco:report coveralls:report -DrepoToken=$COVERALLS_REPO_TOKEN

      - run:
          name: Save test results
          command: |
            mkdir -p ~/junit/
            find . -type f -regex ".*/target/surefire-reports/.*xml" -exec cp {} ~/junit/ \;
          when: always

      - store_test_results:
          path: ~/junit
      - store_artifacts:
          path: ~/junit

workflows:
  version: 2
  test_and_build:
    jobs:
      - test_and_build:
          context: dockerhub-shared
